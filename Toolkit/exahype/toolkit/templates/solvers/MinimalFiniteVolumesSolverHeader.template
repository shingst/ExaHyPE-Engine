// This file is generated by the ExaHyPE toolkit.
// Please do not modify - it will be overwritten by the next
// ExaHyPE toolkit call.
// 
// ========================
//   www.exahype.eu
// ========================
#include "exahype/parser/Parser.h"
#include "exahype/solvers/FiniteVolumesSolver.h"
{{ProfilerInclude}}

namespace {{Project}}{
  class {{Solver}};
}

class {{Project}}::{{Solver}} : public exahype::solvers::FiniteVolumesSolver {
  public:
    {{Solver}}( // TODO out of date
      int cellsPerCoordinateAxis,
      double maximumMeshSize,
      exahype::solvers::Solver::TimeStepping timeStepping{{ConstructorSignatureExtension}}
    );
    double stableTimeStepSize(const double* const luh,const tarch::la::Vector<DIMENSIONS,double>& cellSize) override;
    void adjustSolution(double* const luh,const tarch::la::Vector<DIMENSIONS,double>& cellCentre,const tarch::la::Vector<DIMENSIONS,double>& cellSize,double t,double dt) override;
    void solutionUpdate(double* const luhNew,const double* const luh,double** const tempStateSizedArrays,double** const tempUnknowns,const tarch::la::Vector<DIMENSIONS,double>& cellSize,const double dt,double& maxAdmissibleDt) override;
    void ghostLayerFilling(double* const luh,const double* const luhNeighbour,const tarch::la::Vector<DIMENSIONS,int>& neighbourPosition) override;
    void ghostLayerFillingAtBoundary(double* const luh,const double* const luhbnd,const tarch::la::Vector<DIMENSIONS,int>& boundaryPosition) override;
    void boundaryLayerExtraction(double* const luhbnd,const double* const luh,const tarch::la::Vector<DIMENSIONS,int>& boundaryPosition) override;
    void boundaryConditions(double* const luhbndBnd,const double* const luhbnd,const tarch::la::Vector<DIMENSIONS,double>& cellCentre,const tarch::la::Vector<DIMENSIONS,double>& cellSize,const double t,const double dt,const int faceIndex,const int direction) override;
};
