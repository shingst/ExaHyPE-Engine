// This file was generated by the ExaHyPE toolkit.
// It will not be overwritten.
//
//
// ========================
//   www.exahype.eu
// ========================
#include "{{headerPath}}"


{{project}}::{{plotter}}::{{plotter}}() : exahype::plotters::{{solverType | replace("-", "")}}2UserDefined::{{solverType | replace("-", "")}}2UserDefined(){
  // @TODO Please insert your code here.
}

{% if solverType == "Limiting-ADER-DG" %}
void {{project}}::{{plotter}}::plotADERDGPatch(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch, double* const u,
    double timeStamp) {
  // @TODO Please insert your code here.
}

void {{project}}::{{plotter}}::plotFiniteVolumesPatch(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch, double* const u,
    double timeStamp) {
  // @TODO Please insert your code here.
}

{% else -%}

void {{project}}::{{plotter}}::plotPatch(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch, double* const u,
    double timeStamp) {
  // @TODO Please insert your code here.
}

{%- endif %}

void {{project}}::{{plotter}}::startPlotting( double time) {
  // @TODO Please insert your code here.
}


void {{project}}::{{plotter}}::finishPlotting() {
  // @TODO Please insert your code here.
}
