/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see Lq:ICENSE.txt
 **/
 
/**

 This is an application solely to demonstrate and run grid stuff.

 */
exahype-project  GridDemonstrator
  peano-kernel-path const = ./Peano
  exahype-path const      = ./ExaHyPE
  output-directory const  = ./ApplicationExamples/Experiments/GridDemonstrator
  architecture const      = noarch
  log-file                = mylogfile.log

  computational-domain
    dimension const          = 3
    width                    = 40.0, 40.0
    offset                   = -20.0, -20.0
   // end-time               = 0.1
    time-steps  = 20
  end computational-domain

  shared-memory
    identifier               = dummy
    configure                = {}
    cores                    = 4
    properties-file          = sharedmemory.properties
  end shared-memory

  distributed-memory
    identifier               = static_load_balancing
    configure                = {greedy-naive,FCFS}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps          = all
    fuse-algorithmic-steps-rerun-factor   = 0.99
    fuse-algorithmic-steps-diffusion-factor   = 0.99
    spawn-predictor-as-background-thread = off
    spawn-amr-background-threads         = off
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end global-optimisation

  solver Limiting-ADER-DG GridDemonstrator
    variables const    = 20
    order const        = 2
    maximum-mesh-size  = 10.0
    maximum-mesh-depth = 3
    time-stepping      = global
    type const         = nonlinear, Legendre
    terms const        = source
    optimisation const = generic
    language const     = C

    // check whether musclhancock works
    limiter-type const             = godunov
    limiter-optimisation const     = generic
    limiter-language const         = C
    dmp-observables                = 0
    dmp-relaxation-parameter       = 1e-2 
    dmp-difference-scaling         = 1e-3 

    plot vtk::Legendre::cells::ascii Writer
      variables const = 1
      time            = 0.0
      repeat          = 0.1e-4
      output          = ./full
    end plot
    
    plot vtk::patches::boxes::ascii Writer
      variables const = 1
      time = 0.0
      repeat = 0.000001
      output = ./cells
    end plot

  end solver
end exahype-project
