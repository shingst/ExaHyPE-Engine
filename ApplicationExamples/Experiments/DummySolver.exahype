/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

 This is a dummy application which just requires storage
 but does not compute something.

 In order to need more or less storage, increase or decrease the number of unknowns.
 In order to make it slower, activate the ncp etc.

 */
exahype-project  Dummy
  peano-kernel-path const = ./Peano
  exahype-path const      = ./ExaHyPE
  output-directory const  = ./ApplicationExamples/Experiments/DummySolver
  architecture const      = noarch
  log-file                = mylogfile.log

  computational-domain
    dimension const          = 2
    width                    = 1.0, 1.0
    offset                   = 0.0, 0.0
    end-time                 = 0.1
  end computational-domain

  shared-memory
    identifier               = dummy
    configure                = {}
    cores                    = 8
    properties-file          = sharedmemory.properties
  end shared-memory

  distributed-memory
    identifier               = static_load_balancing
    configure                = {greedy-naive,FCFS}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps          = all
    fuse-algorithmic-steps-rerun-factor   = 0.99
    fuse-algorithmic-steps-diffusion-factor   = 0.99
    spawn-predictor-as-background-thread = off
    spawn-amr-background-threads         = off
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end global-optimisation

  solver ADER-DG DummySolver
    variables const    = 10
    order const        = 8
    maximum-mesh-size  = 0.3339
    maximum-mesh-depth = 0
    time-stepping      = global
    type const         = nonlinear, Legendre
    terms const        = flux
    optimisation const = generic
    language const     = C

    //plot Peano::Legendre::cells::hdf5 Writer
    //plot Peano::Legendre::cells::ascii Writer
    //plot vtk::Legendre::cells::binary Writer
    plot vtk::Legendre::cells::ascii Writer
      variables const = 10
      time            = 0.0
      repeat          = 0.1e-4
      output          = ./dummyoutput
    end plot
  end solver
end exahype-project
