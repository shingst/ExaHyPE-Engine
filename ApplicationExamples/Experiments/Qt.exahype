/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/

 
/**

 A project for testing the scaling.  
 */
exahype-project  Qt

  peano-kernel-path const = ./Peano
  exahype-path const      = ./ExaHyPE
  output-directory const  = ./ApplicationExamples/Experiments/Qt
  architecture const      = noarch
  log-file                = mylogfile.log

  computational-domain
    dimension const          = 3
    width                    = 1000.0, 1000.0, 1000.0
    offset                   = 0.0, 0.0, 0.0
    end-time                 = 25.0
  end computational-domain

  shared-memory
    identifier               = dummy
    configure                = {}
    cores                    = 8
    properties-file          = sharedmemory.properties
  end shared-memory

  distributed-memory
    identifier               = static_load_balancing
    configure                = {hotspot,fair,ranks-per-node:20,virtually-expand-domain}
    buffer-size              = 100000
    timeout                  = 120
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps          = all
    fuse-algorithmic-steps-rerun-factor   = 0.99
    fuse-algorithmic-steps-diffusion-factor   = 0.99
    spawn-predictor-as-background-thread = on
    spawn-amr-background-threads         = off
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end global-optimisation

solver Limiting-ADER-DG Demonstrator
    variables const    = 60
    order const        = 3
    //step size should be 40 to give 27x27x27 grid
    maximum-mesh-size  = 40.0 
//    maximum-mesh-depth = 3
    time-stepping      = global
    type const         = nonlinear, Legendre
    terms const        = source, ncp
    optimisation const = generic
    language const     = C

    // check whether musclhancock works
    limiter-type const             = godunov
    limiter-optimisation const     = generic
    limiter-language const         = C
    dmp-observables                = 0
    dmp-relaxation-parameter       = 1e-2 
    dmp-difference-scaling         = 1e-3 

  end solver
end exahype-project
