/**
 * The GaugeWave is a simple analytic solution for the CCZ4 formulation of Einsteins
 * Equations. The solution is basically given by an advection of the initial data.
 * Therefore, this ID is particularly suitable for convergence studies.
 * 
 * The sine wave length is set to 1, therefore you need a minimum resolution to resolve
 * the wave. On the other hand, you might choose the simulation domain as large as you
 * want. The solution is smooth and computable with pure DG. Exact BC are appropriate.
 **/
exahype-project CCZ4

  peano-kernel-path const  = ./Peano
  exahype-path const       = ./ExaHyPE
  output-directory const   = ./ApplicationExamples/OptTestCase/NonLinear/7_CCZ4_Gauge
  architecture const       = hsw
  
  computational-domain
    dimension const  = 3
    width            = 1.0, 1.0, 1.0
    offset           = 0.0, 0.0, 0.0
    time-steps=100
  end computational-domain
/*
  shared-memory
    identifier       = dummy
    configure        = {}
    cores            = 1
    properties-file  = sharedmemory.properties
  end shared-memory  
  
  distributed-memory
    identifier       = static_load_balancing
    configure        = {hotspot,fair,ranks-per-node:1}
    buffer-size      = 64
    timeout          = 60
  end distributed-memory
*/
  global-optimisation
    fuse-algorithmic-steps          = all
    fuse-algorithmic-steps-rerun-factor   = 0.99
    fuse-algorithmic-steps-diffusion-factor   = 0.99
    spawn-predictor-as-background-thread = off
    spawn-amr-background-threads         = off
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = on
  end global-optimisation

  solver ADER-DG CCZ4Solver_ADERDG
    variables const    = G:6,K:6,theta:1,Z:3,lapse:1,shift:3,b:3,dLapse:3,dxShift:3,dyShift:3,dzShift:3,dxG:6,dyG:6,dzG:6,traceK:1,phi:1,P:3,K0:1
    order const        = 6
    
    maximum-mesh-size  = 0.33339
    maximum-mesh-depth = 0
    time-stepping      = global 
    type const         = nonlinear
    terms const        = ncp,source
    optimisation const = generic, usestack
    language const     = C

    // The CCZ4Solver expects these two runtime constants:
    // 1) An initial data choice, given as string in initialdat/name. Note that the
    //    grid/domain must fit to the ID.
    // 2) The 14 CCZ4 PDE parameters which tune certain contributions in the PDE.
    //    During PDE development or while running special benchmarks, certain
    //    parameters have to fit (such as turning on/off the gamma driver). In practice,
    //    when we run dynamical black holes or neutron stars, we won't change this so
    //    often any more.
    
    constants          = mexa/ref:/exahype/solvers/solver/constants,
                         mexa/style:adapted,
                         mexa/encoding:quotedprintable,
                         initialdata/name:GaugeWave,
                         ccz4/k1:0.0,
                         ccz4/k2:0.0,
                         ccz4/k3:0.0,
                         ccz4/eta:0.0,
                         ccz4/itau:0.0,
                         ccz4/f:0.0,
                         ccz4/g:0.0,
                         ccz4/xi:0.0,
                         ccz4/e:2.0,
                         ccz4/c:0.0,
                         ccz4/mu:0.0,
                         ccz4/ds:1.0,
                         ccz4/sk:0.0,
                         ccz4/bs:0.0,
                         ccz4/lapsetype:0
    
    plot user::defined DerivativeWriter
      variables const = 0
      time      = 1000.0
      repeat    = 0.0001
      output    = ./global-derivative-integrals
    end plot
    
    plot vtk::Legendre::vertices::binary PrimitiveWriter
      variables const = 59
      time      = 1000.0
      repeat    = 0.0001
      output    = ./vtk-output/conserved
    end plot
    
    plot vtk::Legendre::vertices::binary IntegralsWriter
      variables const = 0
      time      = 1000.0
      repeat    = 0.0001
      output    = ./output/global-integrals
    end plot
    
    plot user::defined TimingStatistics
      variables const = 0
      time      = 1000.0
      repeat    = 0.0001
      output    = ./timing-benchmarks
    end plot
    
    plot vtk::Legendre::vertices::binary ConstraintsWriter
      variables const = 6
      time      = 1000.0
      repeat    = 0.0001
      output    = ./vtk-output/constraints
    end plot
    
  end solver
end exahype-project
/**
 * End note:
 * This ExaHyPE specfile was generated by the Mexa parameter framework
 * out of the file AstroApplications/CCZ4.mexa
 **/

