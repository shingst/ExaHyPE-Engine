/**

 3D Elastic Waves

 A simple project

 */
exahype-project  elasticwaves3d

  peano-path                 = ./Peano/peano
  tarch-path                 = ./Peano/tarch
  multiscalelinkedcell-path  = ./Peano/multiscalelinkedcell
  sharedmemoryoracles-path   = ./Peano/sharedmemoryoracles
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./Applications/elasticwaves3d
  architecture const               = noarch

  computational-domain
    dimension const                = 3
    width                    = 1.0, 1.0, 1.0
    offset                   = 0.0, 0.0, 0.0
    end-time                 = 0.4
  end computational-domain

  shared-memory
    identifier               = dummy
    configure                = {}
    cores                    = 2
    properties-file          = sharedmemory.properties
  end shared-memory

  distributed-memory
    identifier               = static_load_balancing
    configure                = {greedy,FCFS}
    buffer-size              = 64
    timeout                  = 120
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps        = all
    fuse-algorithmic-steps-rerun-factor = 0.99
    fuse-algorithmic-steps-diffusion-factor = 0.99
    spawn-predictor-as-background-thread = off
    spawn-amr-background-threads         = off
  end global-optimisation

  solver ADER-DG MyElasticSolver
    variables const          = 9
    parameters const         = 0
    order const              = 3
    maximum-mesh-size  = 0.05
    time-stepping      = global
    kernel const             = generic::fluxes::linear
    language const           = C

    plot vtk::Cartesian::ascii
      variables const= 9
      time     = 0.0
      repeat   = 0.05
      output = ./solution
      select    = x:0.0,y:0.0
    end plot
  end solver

end exahype-project
