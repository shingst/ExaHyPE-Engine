/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

 Elastic Wave

 A simple project. (well, it was simple, in the beginning).

 */
exahype-project  Elastic

  peano-kernel-path const = ./Peano
  exahype-path const      = ./ExaHyPE
  output-directory const  = ./ApplicationExamples/TestCases/linear_flux_ncp_mm_ps
  architecture const      = noarch
  //architecture const      = hsw
  log-file                = mylogfile.log

  computational-domain
    dimension const          = 3
    width                    = 30.0, 30.0, 30.0
    offset                   = 0.0, 0.0, 0.0
    end-time                 = 10.0
  end computational-domain

  shared-memory
    identifier               = dummy
    configure                = {background-tasks:28}
    cores                    = 28
    properties-file          = sharedmemory.properties
  end shared-memory
 
  global-optimisation
    fuse-algorithmic-steps          = on
    fuse-algorithmic-steps-factor   = 0.99
    spawn-predictor-as-background-thread = off
    spawn-amr-background-threads         = off
    /* 0.0 und 0.8 sind schon mal zwei Faktoren */
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end global-optimisation

  solver ADER-DG MyElasticWaveSolver
    variables const    = v:3,sigma:6
    parameters const  = rho:1,cp:1,cs:1
    order const        = 5
    /* 27 points: 0.05, 9 points: 0.15 */
    maximum-mesh-size  = 4.5
    maximum-mesh-depth = 0
    time-stepping      = global
    type const         = linear, Legendre
    terms const        = flux,ncp,materialparameters,pointsources:1
    optimisation const = generic,patchwiseadjust
    //optimisation const = optimised,patchwiseadjust, usestack, ncpvect,fluxvect,materialparametersvect
    language const     = C

    /* Do not need the time series for a point in the moment*/
    plot probe::ascii ProbeWriter
      variables const = 9
      time            = 0.0
      repeat          = 0.005
      output          = ./solution_new
      select          = x:16.0,y:15.0,z:15.0
    end plot
    
  end solver
end exahype-project
