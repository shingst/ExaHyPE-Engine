;sweep Options File
;
; NOTE: This script is meant to be place into folder ApplicationExamples/Elastic/Elastic_ADERDG/
;
; Basic interpolation (ex: %(my_same_group_key)s) may be used
; to deduce values from parameters in the same section or the DEFAULT section; see:
; https://docs.python.org/3/library/configparser.html#configparser.BasicInterpolation

[general]
exahype_root   = /dss/dsshome1/02/di57zoh3/Codes/ExaHyPE-Engine
project_name   = NavierStokes
project_path   = ApplicationExamples/CompressibleNavierStokes
spec_template  = ApplicationExamples/CompressibleNavierStokes/sweep_scripts_tasksharing/NavierStokesPerf.exahype2_template
job_template   = ApplicationExamples/CompressibleNavierStokes/sweep_scripts_tasksharing/supermuc_ng_teampi.slurm_template
output_path    = ApplicationExamples/CompressibleNavierStokes/SDC_correction_detection/Output_731_ranks_upscaling_order_7_comm_opt_new/
make_threads   = 48


; we better prescribe the total number of tasks
#run_command      = "mpiexec /dss/dsshome1/lrz/sys/tools/ddt/19.0.5/bin/ddt-client --ddtsessionfile /dss/dsshome1/02/di57zoh3/.allinea/session/login03-1"
run_command      = "mpiexec -n {{ranks}}"

job_submission   = sbatch 
job_cancellation = scancel

compile_time_parameters = order,offloading,offloading_progress,kernels

[jobs]
; Parameters cores and tasks are also regarded as parameter for the specification
; file template
; Write "cores = auto" in order to select the number of
; cores based on the number of cpus per node and the tasks per node.
time    = 00:30:00
mail    = samfass@in.tum.de
class   = general
islands = 1
num_cpus = 48

ranks_nodes_cores = 1462x62x{2:1},1462x92x{3:2},1462x184x{6:5},1462x366x{12:11},1462x732x{24:23}
;ranks_nodes_cores = 4x2x{2:1},8x2x{2:1},16x2x{2:1},24x2x{2:1},4x2x{4:3},8x2x{4:3},16x2x{4:3},24x2x{4:3}
;ranks_nodes_cores = 56x28x{24:23}
;ranks_nodes_cores = 1462x732x{24:23}
run_grouped = 0,1,2,3,4
;run_grouped =4

[environment]
; Set/modify environment variables before
; building applications.
COMPILER        = Intel
MODE            = Release
EXAHYPE_CC      = "mpicc -DnoPackedRecords "
DISTRIBUTEDMEM  = MPI
COMPILER_CFLAGS = "-g -I/dss/dsshome1/02/di57zoh3/Codes/teaMPI/lib -DnoTBBPrefetchesJobData -DMPIProgressionReliesOnMPITest -DTBBMaximalNumberOfJobsPerBackgroundConsumerRun=4"
COMPILER_LFLAGS = "-g -L/dss/dsshome1/02/di57zoh3/Codes/teaMPI/lib -ltmpi"
USE_IPO         = off
SHAREDMEM       = TBB

[parameters_grouped]
; The following parameters are simply piped into the ExaHyPE specication file.
; Make sure a place holder {{MyParameter}} exists in the specification file.
architecture                                                = skx
dimension                                                   = 3
bufferSize                                                  = 64
timeSteps                                                   = 100
timeStepping                                                = global

[parameters]
order                                                       = 7
#order                                                       = 7,9
maximumMeshSize                                             = 30
maximumMeshDepth                                            = 0
kernels                                                     = generic
#soft_error_generation                                       = migratable_stp_tasks_overwrite_hardcoded
soft_error_generation                                       = no 
check_mechanism                                             = check_stps_with_low_confidence
#save_redundancy                                             = true,false
#save_redundancy                                             = true
save_redundancy                                             = false
make_skeletons_shareable = true
#task_sharing_mode                                           = task_sharing_resilience_correction 
#task_sharing_mode                                           = task_sharing
task_sharing_mode = no
check_time_steps                                            = true
check_derivatives                                           = true
check_admissibility                                         = true
injection_frequency = 10
max_injections = 10
check_lazily = false

#strict
max_error_indicator_derivatives                             = 0
max_error_indicator_timestepsizes                           = 0

#lazy
#max_error_indicator_derivatives                             = 0
#max_error_indicator_timestepsizes                           = 0.04

#lazy
#max_error_indicator_derivatives                             = 100
#max_error_indicator_timestepsizes                           = 0


offloading                                                    = none
offloading_progress                                           = none
offloading_CCP_temperature                                    = 0.5
offloading_diffusion_temperature                              = 0.5
offloading_CCP_frequency                                      = 0
offloading_CCP_steps                                          = 0
offloading_update_temperature                                 = true
offloading_increase_temp_threshold                            = 0
error                                                    =  -100000
#irrelevant for hardcoded injection
injection_rank = 0
