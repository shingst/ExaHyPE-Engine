/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

  The GRMHD PDE in the C++ formulation with ADERDG solver.

 */
exahype-project GRMHD

  peano-kernel-path const          = ./Peano
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./ApplicationExamples/GRMHD/GRMHD_cpp
  architecture const               = noarch
  log-file                         = logs/whatever.log

  computational-domain
    dimension const                = 2
    width                          = 1.0, 1.0
    offset                         = 0.0, 0.0
    end-time                       = 10000.0
  end computational-domain
  
  shared-memory
    identifier               = dummy
    configure                = {}
    cores                    = 8
    properties-file          = sharedmemory.properties
  end shared-memory  
  
  distributed-memory
    identifier               = static_load_balancing
    configure                = {hotspot,fair,ranks-per-node:1}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps          = all
    fuse-algorithmic-steps-rerun-factor   = 0.99
    fuse-algorithmic-steps-diffusion-factor   = 0.99
    spawn-predictor-as-background-thread = off
    spawn-amr-background-threads         = off
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = on
  end global-optimisation

  solver Limiting-ADER-DG GRMHDSolver
    variables const                = rho:1,vel:3,E:1,B:3,psi:1,lapse:1,shift:3,gij:6,coordinates:3,check:1
    order const                    = 3
    maximum-mesh-size              = 6.6666669
    maximum-mesh-depth             = 2
    time-stepping                  = global
    type const = nonlinear
    terms const = flux,ncp,source
    optimisation const = generic
    language const                 = C

    // musclhancock doesnt work in the moment
    limiter-type const             = godunov
    limiter-optimisation const     = generic
    limiter-language const         = C
    dmp-observables                = 2
    dmp-relaxation-parameter       = 1e-2 
    dmp-difference-scaling         = 1e-3 

    constants  = mexa:stuff,
       initialdata/name:alfenwave,
       boundaries/left:exact,
       boundaries/right:exact,
       boundaries/top:exact,
       boundaries/bottom:exact,
       boundaries/front:exact,
       boundaries/back:exact

    // plotters go here

  end solver
end exahype-project
