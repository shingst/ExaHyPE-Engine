/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

 GRMHD, ie. MHD on static curved background spacetime,
 with Limiting ADER-DG Solver.

 */
exahype-project GRMHD

  peano-kernel-path const          = ./Peano
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./ApplicationExamples/GRMHD/GRMHD
//  architecture const               = noarch
  architecture const               = hsw
  log-file                         = whatever.log

  plotter-subdirectory const = Writers

  computational-domain
   dimension const                = 3
   width                          = 30.0, 30.0, 30.0
   offset                         = -15., -15., -15. 
//  end-time                       = 0.05
   time-steps                      = 10 
  end computational-domain
  
  shared-memory
    identifier               = dummy
    configure                = {background-tasks:3}
    cores                    = 4
    properties-file          = sharedmemory.properties
  end shared-memory  
  
  distributed-memory
    identifier       = static_load_balancing
    configure        = {hotspot,fair,ranks-per-node:6}
    buffer-size      = 64000
    timeout          = 3600
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps          = on
    fuse-algorithmic-steps-factor   = 0.99
    spawn-predictor-as-background-thread = on
    spawn-update-as-background-thread = on
    spawn-amr-background-threads         = on
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end global-optimisation

  solver Limiting-ADER-DG GRMHDSolver
    variables const                = rho:1,vel:3,E:1,B:3,psi:1,lapse:1,shift:3,gij:6
    order const                    = 3
    maximum-mesh-size              = 1.2
    maximum-mesh-depth             = 0
    time-stepping                  = global
    type const = nonlinear
  	terms const = flux,ncp
//  	optimisation const = generic
 	  optimisation const = optimised
    language const                 = C

//    limiter-type const             = musclhancock
    limiter-type const             = godunov
    limiter-optimisation const     = generic
    limiter-language const         = C
/* 
    dmp-observables const          = 2
    dmp-relaxation-parameter       = 1e-2 
    dmp-difference-scaling         = 1e-3 
*/
    steps-till-cured               = 0

  plot vtu::Legendre::vertices::ascii ConservedWriter
      variables const = 1
      time      = 0.0
      repeat    = 0.01
      output    = ./vtk-output/primitive
    end plot 

    plot vtu::Cartesian::vertices::limited::ascii ConservedWriter
      variables const = 1
      time      = 0.0
      repeat    = 0.01
      output    = ./vtk-output/limited
    end plot 

    plot vtk::Cartesian::cells::ascii IntegralsWriter
       variables const = 0
       time = 0.0
       repeat = 0.10
       output = ./output/global-integrals
     end plot 

    plot user::defined TimingStatistics_DG
      variables const = 0
      time = 0.0
      repeat = 0.10
      output = ./output/timing-benchmarks
    end plot

/*
    plot Carpet::Cartesian::Vertices::HDF5 PrimitiveWriter
      variables const = 19
      time  = 0.0
      repeat = 0.10
      output = ./hdf5/primitives3d
    end plot
    
    plot Carpet::Cartesian::Vertices::HDF5 PrimitiveWriter
      variables const = 19
      time  = 0.0
      repeat = 0.10
      select = z:0
      output = ./hdf5/primitives2d
    end plot
    
    plot Carpet::Cartesian::Vertices::HDF5 PrimitiveWriter
      variables const = 19
      time  = 0.0
      repeat = 0.10
      select = z:0,y:0
      output = ./hdf5/primitives1d
    end plot
*/


  end solver

end exahype-project
