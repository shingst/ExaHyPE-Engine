/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

 GRMHD, ie. MHD on static curved background spacetime,
 with Limiting ADER-DG Solver.

 */
exahype-project GRMHD

  peano-kernel-path const          = ./Peano
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./ApplicationExamples/GRMHD/GRMHD
  architecture const               = noarch
  log-file                         = whatever.log
  plotter-subdirectory const = Writers

  computational-domain
     dimension const                = 3
     width                          = 20.0, 20.0, 20.0
     offset                         = -10., -10., -10.0
     end-time                       = 1.00001 
  end computational-domain
  
  shared-memory
    identifier               = dummy
    configure                = {}
    cores                    = 1
    properties-file          = sharedmemory.properties
  end shared-memory  
  
  distributed-memory
    identifier       = static_load_balancing
    configure        = {hotspot,fair,ranks-per-node:1}
    buffer-size      = 64
    timeout          = 60
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps          = on
    fuse-algorithmic-steps-factor   = 0.99
    spawn-predictor-as-background-thread = off
    spawn-amr-background-threads         = off
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end global-optimisation

  solver Limiting-ADER-DG GRMHDSolver
    variables const                = rho:1,vel:3,E:1,B:3,psi:1,lapse:1,shift:3,gij:6
    order const                    = 3
    maximum-mesh-size              = 0.233
    maximum-mesh-depth             = 0
    time-stepping                  = global
    type const = nonlinear
	terms const = flux,ncp
	optimisation const = generic
    language const                 = C

    limiter-type const             = musclhancock
    limiter-optimisation const     = generic
    limiter-language const         = C
    dmp-observables const          = 2
    dmp-relaxation-parameter       = 1e-2 
    dmp-difference-scaling         = 1e-3 
    steps-till-cured               = 0

    //constants  = foo:bar,blo:dez

    plot vtk::Cartesian::vertices::limited::binary ConservedWriter
      variables const = 19
      time      = 0.0
      repeat    = 0.00166667
      output    = ./vtk-output/conserved
    end plot 

    plot vtk::Legendre::vertices::ascii IntegralsWriter
      variables const = 0
      time = 0.0
      repeat = 0.00166667
      output = ./global-integrals
    end plot
  end solver

end exahype-project
