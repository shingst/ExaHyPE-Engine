#ifndef __PRIMITIVE_WRITER_FV_CLASS_HEADER__
#define __PRIMITIVE_WRITER_FV_CLASS_HEADER__

// This file is generated by the ExaHyPE toolkit.
// Please do not modify - it will be overwritten by the next
// ExaHyPE toolkit call.
// 
// ========================
//   www.exahype.eu
// ========================
#include "exahype/plotters/Plotter.h"
#include "exahype/solvers/LimitingADERDGSolver.h"

namespace GRMHD{
  class PrimitiveWriter;

  /**
   * Forward declaration
   */
  class GRMHDSolver_FV;
  class GRMHDSolver_ADERDG;
}




class GRMHD::PrimitiveWriter: public exahype::plotters::Plotter::UserOnTheFlyPostProcessing{
  public:
  PrimitiveWriter(GRMHDSolver_FV&  solver);
  PrimitiveWriter(GRMHDSolver_ADERDG&  solver);
  PrimitiveWriter(exahype::solvers::LimitingADERDGSolver&  solver);
  virtual ~PrimitiveWriter();
  void startPlotting(double time) override;
  void finishPlotting() override;
  void mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* Q,
    double* outputQuantities,
    double timeStamp) override;
};

#endif
