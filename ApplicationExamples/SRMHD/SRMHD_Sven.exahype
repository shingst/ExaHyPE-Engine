/**
 * SRMHD generic specfile for convergence analysis.
 *
 *
 * This convergence test is using ideal Special Relativistic
 * Magnetohydrodynamics [using a Fortran kernel]?, in 2D.
 * 
 * Spec file generated at @DATE@ on machine @HOST@.
 *
 */
exahype-project  MHDSolver

  peano-kernel-path const          = ./Peano
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./ApplicationExamples/SRMHD/SRMHD/
  architecture const               = noarch

  computational-domain
    dimension const                = 2
    width                    = 1.0, 1.0
    offset                   = 0.0, 0.0
    end-time                 = 10.0
  end computational-domain

  shared-memory
    identifier               = dummy
    configure                = {}
    cores                    = 1
    properties-file          = sharedmemory.properties
  end shared-memory

  distributed-memory
    identifier               = static_load_balancing
    configure                = {hotspot,fair,ranks-per-node:4}
    buffer-size              = 64
    timeout                  = 120
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps        = all
    fuse-algorithmic-steps-rerun-factor = 0.99
    fuse-algorithmic-steps-diffusion-factor = 0.99
    spawn-predictor-as-background-thread = off
    spawn-amr-background-threads         = off
    disable-vertex-exchange-in-time-steps = on
    time-step-batch-factor           = 0.0
    disable-metadata-exchange-in-batched-time-steps = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end global-optimisation
  
  solver ADER-DG MHDSolver
    variables const          = 9
    order const              = 2
    maximum-mesh-size  = 0.366666666667
    time-stepping      = global
    type const = nonlinear
	terms const = flux
	optimisation const = generic
    language const           = C
    constants          = {initialdata:alfven}

    plot vtk::Cartesian::vertices::ascii ConservedWriter
      variables const= 9
      time     = 0.0
      repeat   = 0.2
      output   = ./conserved
      select    = x:0.0,y:0.0
    end plot
    
    plot vtk::Cartesian::vertices::ascii IntegralsWriter
      variables const = 0
      time = 0.0
      repeat = 0.1
      output = ./global-integrals
      select    = x:0.0,y:0.0
    end plot

    plot vtk::Cartesian::vertices::ascii PrimitivesWriter
      variables const = 9
      time      = 0.0
      repeat    = 0.2
      output    = ./primitive
      select    = x:0.0,y:0.0
    end plot

    plot vtk::Cartesian::vertices::ascii ExactPrimitivesWriter
      variables const = 9
      time      = 0.0
      repeat    = 0.2
      output    = ./exact-primitive
      select    = x:0.0,y:0.0
    end plot

    plot vtk::Cartesian::vertices::ascii ErrorWriter
      variables const = 9
      time      = 0.0
      repeat    = 0.2
      output    = ./errors-conserved
      select    = x:0.0,y:0.0
    end plot

    plot vtk::Cartesian::vertices::ascii RelativeErrorWriter
      variables const = 9
      time      = 0.0
      repeat    = 0.2
      output    = ./relative-errors-conserved
      select    = x:0.0,y:0.0
    end plot

  end solver

end exahype-project
