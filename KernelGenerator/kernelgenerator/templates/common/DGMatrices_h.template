{# /**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/ #}

#ifndef _EXAHYPE_{{guardNamespace}}_DGMATRICES_H_
#define _EXAHYPE_{{guardNamespace}}_DGMATRICES_H_

#include <set>

{% for namespaceName in codeNamespaceList %}
namespace {{namespaceName}} {
{% endfor %}
// All matrices are stored as column major array, _T denote a transposed

void initDGMatrices();
void freeDGMatrices();

extern double *Kxi;
extern double *Kxi_T;
extern double *iK1_T; //note: the generic version of iK1 is actually transposed
extern double *dudx;
extern double *dudx_T;
extern double *FLCoeff;
extern double *FRCoeff;
extern double ** fineGridProjector1d;
extern double ** fineGridProjector1d_T_weighted; // [k][i*nDof+j] = fineGridProjector1d[k][j*nDof+i] * weight[j] / weight[i] / 3.0

{% for namespaceName in codeNamespaceList %}
}
{% endfor %}
#endif /* _EXAHYPE_{{guardNamespace}}_DGMATRICES_H_ */
