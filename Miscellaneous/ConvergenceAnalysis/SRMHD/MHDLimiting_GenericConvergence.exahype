/**
 * SRMHD+Limiting generic specfile for convergence analysis.
 *
 *@comment@ This file is a TEMPLATE, it has variables denoted
 *@comment@ like "@VARNAME@" and replaced by a script before
 *@comment@ handing over to ExaHyPE. Furthermore, these lines
 *@comment@ starting with "@comment@" are removed from the
 *@comment@ generated spec file. Instead, there will be a
 *@comment@ description about the generated file in the
 *@comment@ following:
 *
 * This convergence test is using ideal Special Relativistic
 * Magnetohydrodynamics, in 2D.
 * 
 * Spec file generated at @DATE@ on machine @HOST@.
 *
 */
exahype-project MHD

  peano-kernel-path          = ./Peano
  exahype-path               = ./ExaHyPE
  output-directory           = ./ApplicationExamples/SRMHD_LimitingADERDG
  architecture               = noarch

  computational-domain
    dimension                = 2
    width                    = @ExaWidth@, @ExaHeight@
    offset                   = 0.0, 0.0
    end-time                 = @ExaEndTime@
  end computational-domain
  
  shared-memory
    identifier               = dummy
    cores                    = @ExaTbbCores@
    properties-file          = sharedmemory.properties
  end shared-memory  
  
  distributed-memory
    identifier               = static_load_balancing
    configure                = {hotspot,fair,ranks-per-node:4}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory

  optimisation
    fuse-algorithmic-steps          = off
    fuse-algorithmic-steps-factor   = 0.99
    /* 0.0 und 0.8 sind schon mal zwei Faktoren */
    time-step-batch-factor           = 0.0
    skip-reduction-in-batched-time-steps = on
    disable-amr-if-grid-has-been-stationary-in-previous-iteration = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end optimisation

  solver Limiting-ADER-DG MHDSolver
    variables                = 9
    parameters               = 0
    order                    = @ExapOrder@
    maximum-mesh-size        = @ExaMeshSize@
    time-stepping            = global
    kernel                   = generic::fluxes::nonlinear
    language                 = C
    limiter-kernel           = generic::godunov 
    limiter-language         = C
    dmp-relaxation-parameter = 0.0001
    dmp-difference-scaling   = 0.001
    constants                = {initialdata:@ExaInitialData@}

    plot vtk::Cartesian::vertices::ascii ConservedWriter
      variables = 9
      time      = 0.0
      repeat    = @ExaVtkOutputRepeat@
      output    = ./conserved
      select = {}
    end plot
  end solver

end exahype-project
