# Setup to run ExaHyPE on HLRS HazelHen with MPI, without TBB.
# This setup was crafted by Luke in the Munich Coding Week 11-2018.

module load cray-python/3.6.5.3 # default is python3.4.6

module switch PrgEnv-cray PrgEnv-intel 

export COMPILER="Intel"
export COMPILER_CFLAGS="-DnoMultipleThreadsMayTriggerMPICalls -DMPIProgressionReliesOnMPITest -DnoTBBPrefetchesJobData"
export DISTRIBUTEDMEM=MPI
export EXAHYPE_CC="CC"
export EXAHYPE_FC="ftn"
export MODE="Release"
export SHAREDMEM=TBB
export TBB_PATH=$INTEL_PATH/tbb
export TBB_INC="-I${TBB_PATH}/include"
export TBB_SHLIB="-L${TBB_PATH}/lib/intel64/gcc4.7 -ltbb" 
export CRAYPE_LINK_TYPE=dynamic

module load numlib/intel/tbb/2019.0 # sets LD_LIBRARY_PATH for tbb

# for GSL, there is unfortunately no module on HazelHen.

# Guide how to interactively test the setup on Hazelhen:
# 1. Compile on the login nodes
# 2. Get an interactive node for working:
#
#    qsub -I -l nodes=1:ppn=24,walltime=00:30:00    # regular queue
#    qsub -I -l nodes=16:ppn=24,walltime=00:25:00 -q test   # test queue
#
#    Test queue has 1 job per user, 25min walltimes, 384 nodes per job
#
# 3. Running an Executable on the interactive node always requires aprun,
#    even single core:
#
#    aprun -n1 ./ExaHyPE-Whatever ../Whatever.exahype
#
