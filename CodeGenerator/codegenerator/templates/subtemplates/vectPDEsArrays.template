{#
  String array : name of the array
  int size : base size (e.g. nVar or nData)
  bool blockedDim : transpose a double** with dim splitting first if true, double* otherwise
#}
{% with %}
{# /********************
   **** Subtemplate ****
   *********************/ #}
{% if blockedDim %}{# e.g. used for F or gradQ #}
double {{array}}_x_block[{{size*vectSize}}] __attribute__((aligned(ALIGNMENT))) = {0.};
double {{array}}_y_block[{{size*vectSize}}] __attribute__((aligned(ALIGNMENT))) = {0.};
{% if nDim==3 %}
double {{array}}_z_block[{{size*vectSize}}] __attribute__((aligned(ALIGNMENT))) = {0.};
{% endif %}
double* {{array}}_x[{{size}}] __attribute__((aligned(ALIGNMENT))) = { {% for n in range(size-1) %}{{array}}_x_block+{{n*vectSize}}, {% endfor %}{{array}}_x_block+{{(size-1)*vectSize}} };
double* {{array}}_y[{{size}}] __attribute__((aligned(ALIGNMENT))) = { {% for n in range(size-1) %}{{array}}_y_block+{{n*vectSize}}, {% endfor %}{{array}}_y_block+{{(size-1)*vectSize}} };
{% if nDim==3 %}
double* {{array}}_z[{{size}}] __attribute__((aligned(ALIGNMENT))) = { {% for n in range(size-1) %}{{array}}_z_block+{{n*vectSize}}, {% endfor %}{{array}}_z_block+{{(size-1)*vectSize}} };
{% endif %}
double** {{array}}[{{nDim}}] __attribute__((aligned(ALIGNMENT))) = { {{array}}_x, {{array}}_y{{', '~array~'_z' if nDim==3 else ''}} };
{% else %}{# blockedDim #}
double {{array}}_block[{{size*vectSize}}] __attribute__((aligned(ALIGNMENT))) = {0.};
double* {{array}}[{{size}}] __attribute__((aligned(ALIGNMENT))) = { {% for n in range(size-1) %}{{array}}_block+{{n*vectSize}}, {% endfor %}{{array}}_block+{{(size-1)*vectSize}} };
{% endif %}
{% endwith %}
